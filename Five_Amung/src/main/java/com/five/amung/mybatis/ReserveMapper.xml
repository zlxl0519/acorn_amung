<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reserve">
	<select id="getInfoCheck" parameterType="reserveDto" resultType="int">
		select Count(*)
		from A_reserve
		where member_id=#{member_id}
	</select>
	<select id="getInfoList" parameterType="reserveDto" resultType="reserveDto">
		select result1.* , rownum as rnum
			FROM
			(SELECT
				reserve.num as num,
				reserve.member_id as member_id,
				room.room_name as room_name,
				TO_CHAR(reserve.checkin_date, 'YYYY"년 "MM"월 "DD"일"') as checkin_date,
				TO_CHAR(reserve.checkout_date, 'YYYY"년 "MM"월 "DD"일"') as checkout_date,
				reserve.start_time as start_time,
				reserve.end_time as end_time,
				reserve.name as name,
				reserve.phone as phone,
				reserve.room_price,
				TO_CHAR(reserve.regdate, 'YYYY"년 "MM"월 "DD"일 "HH24"시 "MI"분"') as regdate,
				reserve.state as state,
				reserve.dog_num as dog_num
			FROM A_reserve reserve
			INNER JOIN A_room room ON reserve.room_num = room.num
			WHERE reserve.member_id=#{member_id}
			
			<choose>
				<when test="room_name != null"><!-- 파라미터 타입으로 전달된 데이터를 읽을수 있다. -->
					WHERE room_name LIKE '%'||#{room_name}||'%'
				</when>
				<when test="name != null">
					WHERE name LIKE '%'||#{name}||'%'
				</when>
				<when test="state != null">
					WHERE state LIKE '%'||#{state}||'%'
				</when>
			</choose>
			ORDER BY NUM DESC ) result1
	</select>
	<select id="getPrice" parameterType="roomPriceDto" resultType="int">
		select price
		from A_room_price
		where weight=#{weight} and room_name=#{room_name}
	</select>
	<select id="getTerm" parameterType="roomPriceDto" resultType="int">
		select to_date(#{checkin_date}, 'yyyy-mm-dd')-to_date(#{checkout_date}, 'yyyy-mm-dd')
		from dual
	</select>
	<select id="getRoomNum" parameterType="roomPriceDto" resultType="int">
		select num
		from A_room
		where room_name=#{room_name} and weight=#{weight}
	</select>
	<update id="updateRoomReserveState" parameterType="reserveDto">
		update A_room
		set room_reserve_state='yes'
		where num=#{room_num}
	</update>
	<insert id="insertReserve" parameterType="reserveDto">
		insert into A_reserve
		(num, member_id, dog_num, room_num, checkin_date, checkout_date, 
			start_time, end_time, name, phone, room_price, regdate, state)
		values(A_reserve_seq.nextval, #{member_id}, #{dog_num}, #{room_num}, to_date(#{checkin_date}, 'yyyy-mm-dd'),
			to_date(#{checkout_date}, 'yyyy-mm-dd'), #{start_time}, #{end_time}, #{name}, #{phone}, #{room_price}, sysdate, '예약대기중')
		
	</insert>
	<select id="getData" parameterType="int" resultType="reserveDto">
		select num, member_id, dog_num, room_num, to_char(checkin_date, 'yyyy-mm-dd') as checkin_date, 
		to_char(checkout_date, 'yyyy-mm-dd') as checkout_date, start_time, end_time, name, phone, 
		room_price, regdate, state
		from A_reserve
		where num=#{num}
	</select>
	<select id="getRoomData" parameterType="int" resultType="com.five.amung.reserve.dto.RoomDto">
		select num, room_name, weight, room_reserve_state
		from A_room
		where num=#{num}
	</select>
	<!-- 관리자가 예약 리스트 보는 -->
	<select id="getList" parameterType="reserveDto" resultType="reserveDto">
		select *
		from	
			(select result1.* , rownum as rnum
			from	
				(select reserve.num as num, reserve.member_id as member_id, dogs.dname as dname, room.room_name as room_name, 
				to_char(reserve.checkin_date, 'yyyy-mm-dd') as checkin_date, 
				to_char(reserve.checkout_date, 'yyyy-mm-dd') as checkout_date, reserve.start_time as start_time, 
				reserve.end_time as end_time, reserve.name as name, reserve.phone as phone, 
				reserve.room_price, reserve.regdate as regdate, reserve.state as state, reserve.dog_num as dog_num
				from A_dogs dogs inner join A_reserve reserve
					on dogs.num = reserve.dog_num
						inner join A_room room
					on reserve.room_num = room.num
				<choose>
					<when test="room_name != null"><!-- 파라미터 타입으로 전달된 데이터를 읽을수 있다. -->
						WHERE room_name LIKE '%'||#{room_name}||'%' 
					</when>
					<when test="name != null">
						WHERE name LIKE '%'||#{name}||'%'
					</when>
					<when test="member_id != null">
						WHERE reserve.member_id LIKE '%'||#{member_id}||'%'
					</when>
					<when test="state != null">
						WHERE state LIKE '%'||#{state}||'%'
					</when>
				</choose>
				order by num desc) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	<select id="getCount" parameterType="reserveDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM A_dogs dogs inner join A_reserve reserve
					on dogs.num = reserve.dog_num
						inner join A_room room
					on reserve.room_num = room.num
		<choose>
			<when test="room_name != null"><!-- 파라미터 타입으로 전달된 데이터를 읽을수 있다. -->
				WHERE room_name LIKE '%'||#{room_name}||'%' 
			</when>
			<when test="name != null">
				WHERE name LIKE '%'||#{name}||'%'
			</when>
			<when test="member_id != null">
				WHERE reserve.member_id LIKE '%'||#{member_id}||'%'
			</when>
			<when test="state != null">
				WHERE state LIKE '%'||#{state}||'%'
			</when>
		</choose>
	</select>
	<update id="reserveCancle" parameterType="int">
		update A_reserve
		set state='예약취소'
		where num=#{num}
	</update>
	<update id="updateNoRoomState" parameterType="int">
		update A_room
		set room_reserve_state='no'
		where num=#{room_num}
	</update>
	<update id="reserveOk" parameterType="int">
		update A_reserve
		set state='예약확인'
		where num=#{num}
	</update>
	<update id="updateYesRoomState" parameterType="int">
		update A_room
		set room_reserve_state='yes'
		where num=#{room_num}
	</update>
</mapper>