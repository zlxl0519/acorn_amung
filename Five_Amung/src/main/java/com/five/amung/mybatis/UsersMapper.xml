<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="users">

	<!-- table명 : A_member -->

	<!-- 회원가입 회원 정보 insert -->
	<insert id="insert" parameterType="usersDto">
		INSERT INTO A_member
		
		(id, pwd, email, profile, name, phone, regdate)
		VALUES(#{id}, #{pwd}, #{email}, #{profile}, #{name}, #{phone}, SYSDATE)
	</insert>
	
	<!-- 회원리스트 select -->
	<select id="getList" parameterType="usersDto" resultType="usersDto">
		select * from
			(select result1.*, rownum as rnum from
				(select id, pwd, email, profile, name, phone, TO_CHAR(regdate, 'YYYY-MM-DD') AS "regdate"
				from A_member
				<choose>
					<when test="id != null">
						WHERE id LIKE '%'||#{id}||'%' 
					</when>
					<when test="name != null">
						WHERE name LIKE '%'||#{name}||'%'
					</when>
					<when test="phone != null">
						WHERE phone LIKE '%'||#{phone}||'%'
					</when>
				</choose>				
				order by regdate desc) result1)
		where rnum between #{startRowNum} and #{endRowNum}
	</select>
	
	<!-- 전체 row의 갯수를 리턴해주는 메소드 -->
	<select id="getCount" parameterType="usersDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM A_member
		<choose>
			<when test="id != null">
				WHERE id LIKE '%'||#{id}||'%' 
			</when>
			<when test="name != null">
				WHERE name LIKE '%'||#{name}||'%'
			</when>
			<when test="phone != null">
				WHERE phone LIKE '%'||#{phone}||'%'
			</when>
		</choose>	
	</select>
	
	<!-- 특정 회원의 강아지 정보 가져오기 -->
	<select id="getDogList" parameterType="string" resultType="dogsDto">
		select num, member_id, dname, dage, breed, weight, neutral, gender, etc
		from A_dogs
		where member_id=#{member_id}
	</select>
	
	<!-- 특정 회원의 강아지 수 가져오기 -->
	<select id="getDogCount" parameterType="string" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM A_dogs
		where member_id=#{member_id} 	
	</select>
  
	<select id="getData" parameterType="string" resultType="usersDto">
		select id, pwd, email, profile, name, phone, to_char(regdate, 'yy.mm.dd hh24"시"mm"분"')as regdate
		from A_member
		where id=#{id}
	</select>
  	<!-- 아이디 찾기 -->
	<select id="idSearch" parameterType="usersDto" resultType="usersDto">
		select id, regdate
		from A_member
		<choose>
			<when test="name != null and email !=null">
				where name=#{name} and email=#{email}
			</when>
			<when test="name !=null and phone !=null">
				where name=#{name} and phone=#{phone}
			</when>
		</choose>
	</select>
	

	<!-- 비밀번호 찾기 -->
	<select id="pwdSearch" parameterType="usersDto" resultType="string">
		select pwd
		from A_member
		where id=#{id} and name=#{name} and phone=#{phone}
	</select>

	<!-- 아이디 중복 체크 -->
	<select id="isExist" parameterType="string" resultType="string">
		SELECT id
		FROM A_member
		WHERE id=#{inputId}
	</select>
  
	<!-- 비밀번호 변경 -->
	<update id="updatePwd" parameterType="usersDto">
		update A_member
		set pwd=#{newPwd}
		where id=#{id}
	</update>

	<!-- 리연 추가 -->
	<!-- 회원 정보 삭제 -->
	<delete id="delete" parameterType="string">
		DELETE
		FROM A_member
		WHERE id=#{id}
	</delete>
	<!-- 비밀번호체크 -->
	<select id="checkPwd" parameterType="usersDto" resultType="int">
		SELECT COUNT(*)
		FROM A_member
		WHERE id=#{id} and pwd=#{pwd}
	</select>
	<!-- 회원 정보 수정 -->
	<update id="update" parameterType="usersDto">
		UPDATE A_member
		SET email=#{email}, profile=#{profile}, name=#{name}, phone=#{phone}
		WHERE id=#{id}
	</update>
</mapper>